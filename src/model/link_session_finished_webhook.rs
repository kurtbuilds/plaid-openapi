use serde::{Serialize, Deserialize};
///Contains the state of a completed Link session, along with the public token if available.
#[derive(Debug, Clone, Serialize, Deserialize, Default)]
pub struct LinkSessionFinishedWebhook {
    ///The Plaid environment the webhook was sent from
    pub environment: String,
    ///The identifier for the Link session.
    pub link_session_id: String,
    ///The link token used to create the Link session.
    pub link_token: String,
    ///The public token generated by the Link session.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub public_token: Option<String>,
    ///The final status of the Link session. Will always be "SUCCESS" or "EXITED".
    pub status: String,
    ///`SESSION_FINISHED`
    pub webhook_code: String,
    ///`LINK`
    pub webhook_type: String,
}
impl std::fmt::Display for LinkSessionFinishedWebhook {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
        write!(f, "{}", serde_json::to_string(self).unwrap())
    }
}